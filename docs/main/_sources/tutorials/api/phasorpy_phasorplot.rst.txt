
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/api/phasorpy_phasorplot.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: xml

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_api_phasorpy_phasorplot.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_api_phasorpy_phasorplot.py:


Phasor plot
===========

An introduction to plotting phasor coordinates.

The :py:class:`phasorpy.plot.PhasorPlot` class is used to plot phasor
coordinates as scattered points, lines, two-dimensional histograms,
and contours.
The plots are supplemented with universal semicircles, polar grids,
polar cursors, component mixture indicators, and manual annotations.

.. GENERATED FROM PYTHON SOURCE LINES 16-17

Import required modules, functions, and classes:

.. GENERATED FROM PYTHON SOURCE LINES 17-26

.. code-block:: Python


    import math

    import numpy

    from phasorpy.plot import PhasorPlot

    numpy.random.seed(42)








.. GENERATED FROM PYTHON SOURCE LINES 27-32

Empty phasor plot
-----------------

Create an empty phasor plot, showing the first quadrant and the
universal semicircle:

.. GENERATED FROM PYTHON SOURCE LINES 32-36

.. code-block:: Python


    plot = PhasorPlot()
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_001.png
   :alt: Phasor plot
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 37-42

Universal semicircle
--------------------

Create a phasor plot at a frequency of 80 MHz and custom axis limits.
Add a second, transformed universal semicircle:

.. GENERATED FROM PYTHON SOURCE LINES 42-47

.. code-block:: Python


    plot = PhasorPlot(frequency=80.0, xlim=(-0.2, 1.05))
    plot.semicircle(polar_reference=(0.9852, 0.5526))
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_002.png
   :alt: Phasor plot (80 MHz)
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 48-52

Scatter and line plots
----------------------

Plot phasor coordinates as scatter or lines:

.. GENERATED FROM PYTHON SOURCE LINES 52-59

.. code-block:: Python


    plot = PhasorPlot(frequency=80.0, title='Scatter and line plots')
    plot.plot(0.6, 0.4, label='1')
    plot.plot([0.2, 0.9], [0.4, 0.3], '.-', label='2')
    plot.plot([0.39, 0.4, 0.41], [0.21, 0.19, 0.2], 'x', label='3')
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_003.png
   :alt: Scatter and line plots
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 60-65

Cursors
-------

Highlight specific polar coordinates and ranges thereof using phasor
coordinates:

.. GENERATED FROM PYTHON SOURCE LINES 65-74

.. code-block:: Python


    plot = PhasorPlot(frequency=80.0, title='Cursors')
    plot.cursor(0.4, 0.3)
    plot.cursor(0.5, 0.3, 0.8, 0.15)
    plot.cursor(0.9, 0.3, radius=0.05)
    plot.cursor(0.4, 0.3, radius=0.05, radius_minor=0.1)
    plot.cursor(0.1, 0.3, radius=0.05, radius_minor=0.1, align_semicircle=True)
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_004.png
   :alt: Cursors
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 75-76

Alternatively, use polar coordinates with various options:

.. GENERATED FROM PYTHON SOURCE LINES 76-102

.. code-block:: Python


    plot = PhasorPlot(frequency=80.0, title='Polar cursors')
    plot.polar_cursor(0.6435, 0.5, linestyle='-')
    plot.polar_cursor(0.5236, 0.6, 0.1963, 0.8, linewidth=2)
    plot.polar_cursor(0.3233, 0.9482, radius=0.05, color='tab:red')
    plot.polar_cursor(
        0.6435,
        0.5,
        radius=0.05,
        radius_minor=0.1,
        color='tab:blue',
        fill=True,
        alpha=0.5,
    )
    plot.polar_cursor(
        0.6435,
        0.5,
        radius=0.1,
        radius_minor=0.05,
        angle=0.0,
        color='tab:green',
        fill=True,
        alpha=0.5,
    )
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_005.png
   :alt: Polar cursors
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 103-107

Component mixtures
------------------

Show linear combinations of phasor coordinates or ranges thereof:

.. GENERATED FROM PYTHON SOURCE LINES 107-127

.. code-block:: Python


    real, imag, weights = numpy.array(
        [[0.1, 0.2, 0.5, 0.9], [0.3, 0.4, 0.5, 0.3], [2, 1, 2, 1]]
    )

    plot = PhasorPlot(frequency=80.0, title='Component mixtures')
    plot.components(
        real,
        imag,
        linestyle='',
        marker='o',
        labels=['A', 'B', 'C', 'D'],
        color='tab:blue',
        fill=True,
        facecolor='lightyellow',
        label='components',
    )
    plot.components(real, imag, weights, marker='o', label='mixture')
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_006.png
   :alt: Component mixtures
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 128-132

Two-dimensional histogram
-------------------------

Plot large number of phasor coordinates as a two-dimensional histogram:

.. GENERATED FROM PYTHON SOURCE LINES 132-140

.. code-block:: Python


    real, imag = numpy.random.multivariate_normal(
        (0.6, 0.4), [[3e-3, -1e-3], [-1e-3, 1e-3]], (256, 256)
    ).T
    plot = PhasorPlot(frequency=80.0, title='Two-dimensional histogram')
    plot.hist2d(real, imag)
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_007.png
   :alt: Two-dimensional histogram
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 141-145

Contours
--------

Plot the contours of the density of phasor coordinates:

.. GENERATED FROM PYTHON SOURCE LINES 145-150

.. code-block:: Python


    plot = PhasorPlot(frequency=80.0, title='Contours')
    plot.contour(real, imag)
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_008.png
   :alt: Contours
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 151-155

Image
-----

Plot a custom-colored image of a two-dimensional histogram (not implemented):

.. GENERATED FROM PYTHON SOURCE LINES 155-160

.. code-block:: Python


    plot = PhasorPlot(frequency=80.0, title='Image (not implemented yet)')
    # plot.imshow(image)
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_009.png
   :alt: Image (not implemented yet)
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 161-165

Combined plots
--------------

Multiple plots can be combined:

.. GENERATED FROM PYTHON SOURCE LINES 165-183

.. code-block:: Python


    real2, imag2 = numpy.random.multivariate_normal(
        (0.9, 0.2), [[2e-4, -1e-4], [-1e-4, 2e-4]], 4096
    ).T

    plot = PhasorPlot(
        title='Combined plots', xlim=(0.35, 1.03), ylim=(0.1, 0.59), grid=False
    )
    plot.hist2d(real, imag, bins=64, cmap='Blues')
    plot.contour(real, imag, bins=48, levels=3, cmap='summer_r', norm='log')
    plot.hist2d(real2, imag2, bins=64, cmap='Oranges')
    plot.plot(0.6, 0.4, '.', color='tab:blue')
    plot.plot(0.9, 0.2, '.', color='tab:orange')
    plot.cursor(0.9, 0.2, color='tab:orange')
    plot.polar_cursor(math.atan2(0.4, 0.6), math.hypot(0.6, 0.4), color='tab:blue')
    plot.semicircle(frequency=80.0, color='tab:purple')
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_010.png
   :alt: Combined plots
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_010.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 184-188

All quadrants
-------------

Create an empty phasor plot showing all four quadrants:

.. GENERATED FROM PYTHON SOURCE LINES 188-192

.. code-block:: Python


    plot = PhasorPlot(allquadrants=True, title='All quadrants')
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_011.png
   :alt: All quadrants
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_011.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 193-199

Matplotlib axes
---------------

The PhasorPlot class can use an existing matlotlib axes.
The `PhasorPlot.ax` attribute provides access to the underlying
matplotlib axes, for example, to add annotations:

.. GENERATED FROM PYTHON SOURCE LINES 199-213

.. code-block:: Python


    from matplotlib import pyplot

    ax = pyplot.subplot(1, 1, 1)
    plot = PhasorPlot(ax=ax, allquadrants=True, title='Matplotlib axes')
    plot.hist2d(real, imag, cmap='Blues')
    plot.ax.annotate(
        '0.6, 0.4',
        xy=(0.6, 0.4),
        xytext=(0.2, 0.2),
        arrowprops=dict(arrowstyle='->'),
    )
    pyplot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_012.png
   :alt: Matplotlib axes
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_012.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 214-219

plot_phasor function
--------------------

The :py:func:`phasorpy.plot.plot_phasor` function provides a simpler
alternative to plot phasor coordinates in a single statement:

.. GENERATED FROM PYTHON SOURCE LINES 219-224

.. code-block:: Python


    from phasorpy.plot import plot_phasor

    plot_phasor(real[0, :32], imag[0, :32], marker='.', frequency=80.0)




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_013.png
   :alt: Phasor plot (80 MHz)
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_phasorplot_013.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 225-228

sphinx_gallery_thumbnail_number = 10
mypy: allow-untyped-defs, allow-untyped-calls
mypy: disable-error-code="arg-type"


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.775 seconds)


.. _sphx_glr_download_tutorials_api_phasorpy_phasorplot.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: phasorpy_phasorplot.ipynb <phasorpy_phasorplot.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: phasorpy_phasorplot.py <phasorpy_phasorplot.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: phasorpy_phasorplot.zip <phasorpy_phasorplot.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
