
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/api/phasorpy_fret.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: xml

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_api_phasorpy_fret.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_api_phasorpy_fret.py:


Förster Resonance Energy Transfer
=================================

Calculate and plot phasor coordinates of FRET donor and acceptor channels.

The :py:func:`phasorpy.lifetime.phasor_from_fret_donor`,
:py:func:`phasorpy.lifetime.phasor_from_fret_acceptor`, and
:py:class:`phasorpy.plot.PhasorPlotFret` functions and classes
are used to calculate and plot phasor coordinates of
FRET (Förster Resonance Energy Transfer) donor and acceptor channels
as a function of:

- laser pulse or modulation frequency
- donor and acceptor lifetimes
- FRET efficiency
- fraction of donors undergoing FRET
- fraction of directly excited acceptors (acceptor bleedthrough)
- fraction of donor fluorescence in acceptor channel (donor bleedthrough)
- fraction of background fluorescence

.. GENERATED FROM PYTHON SOURCE LINES 25-26

Define FRET model settings used throughout this tutorial:

.. GENERATED FROM PYTHON SOURCE LINES 26-35

.. code-block:: Python


    settings = {
        'frequency': 60.0,  # MHz
        'donor_lifetime': 4.2,  # ns
        'acceptor_lifetime': 3.0,  # ns
        'fret_efficiency': 0.5,  # 50%
    }









.. GENERATED FROM PYTHON SOURCE LINES 36-58

FRET efficiency trajectories
----------------------------

The lifetime :math:`\tau_{DA}` and fluorescence intensity :math:`F_{DA}`
of a FRET donor quenched by energy transfer of efficiency :math:`E` is given
by :math:`\tau_{DA} = \tau_{D} (1 - E)` and :math:`F_{DA} = F_{D} (1 - E)`,
where :math:`\tau_{D}` and :math:`F_{D}` are the donor lifetime and
intensity in the absence of energy transfer.

Hence, in the absence of background fluorescence and donors not undergoing
energy transfer, the phasor coordinates of the donor channel at different
FRET efficiencies lie on the universal semicircle.
At 100% energy transfer, the donor lifetime and fluorescence intensity are
zero.

The sensitized emission of a FRET acceptor is phase-shifted and demodulated
relative to the FRET donor because of the duration of, and dissipation
during, relaxation and energy transfer processes.
Hence, in the absence of directly excited acceptor, donor bleedthrough,
and background fluorescence, the phasor coordinates of the acceptor channel
at different FRET efficiencies lie outside the universal semicircle of
the donor.

.. GENERATED FROM PYTHON SOURCE LINES 58-67

.. code-block:: Python


    from phasorpy.plot import PhasorPlotFret

    PhasorPlotFret(
        **settings,
        title='FRET efficiency trajectories',
    ).show()





.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_fret_001.png
   :alt: FRET efficiency trajectories
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_fret_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 68-75

Fractions not fretting
----------------------

Adding fractions of donors not participating in FRET and fractions
of directly excited acceptors (acceptor bleedthrough) pulls the
FRET trajectories of the donor and acceptor channels towards the
phasor coordinates of the donor and acceptor without FRET:

.. GENERATED FROM PYTHON SOURCE LINES 75-84

.. code-block:: Python


    PhasorPlotFret(
        **settings,
        donor_fretting=0.9,  # 90%
        acceptor_bleedthrough=0.1,  # 10%
        title='FRET efficiency trajectories with fractions not fretting',
    ).show()





.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_fret_002.png
   :alt: FRET efficiency trajectories with fractions not fretting
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_fret_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 85-91

Donor bleedthrough
------------------

When the acceptor channel contains fractions of donor fluorescence
(donor bleedthrough), the FRET efficiency trajectory of the acceptor
channel shifts towards the phasor coordinates of the donor channel:

.. GENERATED FROM PYTHON SOURCE LINES 91-99

.. code-block:: Python


    PhasorPlotFret(
        **settings,
        donor_bleedthrough=0.1,  # 10%
        title='FRET efficiency trajectories with donor bleedthrough',
    ).show()





.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_fret_003.png
   :alt: FRET efficiency trajectories with donor bleedthrough
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_fret_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 100-109

Background fluorescence
-----------------------

In the presence of background fluorescence, the FRET efficiency trajectories
are linear combinations with the background phasor coordinates.
At 100% energy transfer, the donor channel only contains background
fluorescence if all donors participate in FRET.
At 0% energy transfer, in the absence of donor bleedthrough and directly
excited acceptor, the acceptor channel only contains background fluorescence:

.. GENERATED FROM PYTHON SOURCE LINES 109-121

.. code-block:: Python


    PhasorPlotFret(
        **settings,
        donor_fretting=1.0,
        acceptor_background=0.1,  # 10%
        donor_background=0.1,  # 10%
        background_real=0.5,
        background_imag=0.2,
        title='FRET efficiency trajectories with background',
    ).show()





.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_fret_004.png
   :alt: FRET efficiency trajectories with background
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_fret_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 122-137

Many parameters
---------------

The phasor coordinates of the donor channel may contain fractions of:

- donor not undergoing energy transfer
- donor quenched by energy transfer
- background fluorescence

The phasor coordinates of the acceptor channel may contain fractions of:

- acceptor sensitized by energy transfer
- directly excited acceptor
- donor bleedthrough
- background fluorescence

.. GENERATED FROM PYTHON SOURCE LINES 137-151

.. code-block:: Python


    PhasorPlotFret(
        **settings,
        donor_fretting=0.9,
        donor_bleedthrough=0.1,
        acceptor_bleedthrough=0.1,
        acceptor_background=0.1,
        donor_background=0.1,
        background_real=0.5,
        background_imag=0.2,
        title='FRET efficiency trajectories with many parameters',
    ).show()





.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_fret_005.png
   :alt: FRET efficiency trajectories with many parameters
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_fret_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 152-160

Interactive plot
----------------

Run the FRET phasor plot interactively::

    $ python -m phasorpy fret

or

.. GENERATED FROM PYTHON SOURCE LINES 160-170

.. code-block:: Python


    PhasorPlotFret(
        **settings,
        donor_fretting=0.9,
        donor_bleedthrough=0.1,
        interactive=True,
        title='Interactive FRET phasor plot',
    ).show()





.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_fret_006.png
   :alt: Interactive FRET phasor plot
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_fret_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 171-179

Multi-frequency plot
--------------------

Since each component of the FRET model has a distinct frequency response,
the multi-frequency plots of donor and acceptor channels reveal
complex patterns.
Background fluorescence is omitted from this example to model an
in vitro experiment:

.. GENERATED FROM PYTHON SOURCE LINES 179-222

.. code-block:: Python


    import numpy

    from phasorpy.lifetime import (
        phasor_from_fret_acceptor,
        phasor_from_fret_donor,
    )
    from phasorpy.phasor import phasor_to_polar
    from phasorpy.plot import plot_polar_frequency

    frequency = numpy.logspace(0, 4, 64).reshape(-1, 1)  # 1-10000 MHz
    fret_efficiency = numpy.array([0.05, 0.95]).reshape(1, -1)  # 5% and 95%
    donor_lifetime = 4.2
    acceptor_lifetime = 3.0
    donor_fretting = 0.9
    donor_bleedthrough = 0.1
    acceptor_bleedthrough = 0.1

    donor_real, donor_imag = phasor_from_fret_donor(
        frequency,
        donor_lifetime,
        fret_efficiency=fret_efficiency,
        donor_fretting=donor_fretting,
    )

    # phasor of acceptor channel
    acceptor_real, acceptor_imag = phasor_from_fret_acceptor(
        frequency,
        donor_lifetime,
        acceptor_lifetime,
        fret_efficiency=fret_efficiency,
        donor_fretting=donor_fretting,
        donor_bleedthrough=donor_bleedthrough,
        acceptor_bleedthrough=acceptor_bleedthrough,
    )

    plot_polar_frequency(
        frequency,
        phasor_to_polar(donor_real, donor_imag)[0],
        phasor_to_polar(donor_real, donor_imag)[1],
        title='Donor channel',
    )




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_fret_007.png
   :alt: Donor channel
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_fret_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 223-230

.. code-block:: Python


    plot_polar_frequency(
        frequency,
        *phasor_to_polar(acceptor_real, acceptor_imag),
        title='Acceptor channel',
    )




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_fret_008.png
   :alt: Acceptor channel
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_fret_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 231-234

sphinx_gallery_thumbnail_number = 5
mypy: allow-untyped-defs, allow-untyped-calls
mypy: disable-error-code="arg-type"


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.715 seconds)


.. _sphx_glr_download_tutorials_api_phasorpy_fret.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: phasorpy_fret.ipynb <phasorpy_fret.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: phasorpy_fret.py <phasorpy_fret.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: phasorpy_fret.zip <phasorpy_fret.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
