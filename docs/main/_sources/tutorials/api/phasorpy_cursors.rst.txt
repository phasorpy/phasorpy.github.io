
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/api/phasorpy_cursors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: xml

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_api_phasorpy_cursors.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_api_phasorpy_cursors.py:


Cursors
=======

An introduction to selecting phasor coordinates using cursors.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Import required modules, functions, and classes:

.. GENERATED FROM PYTHON SOURCE LINES 11-26

.. code-block:: Python


    import matplotlib.pyplot as plt

    from phasorpy.color import CATEGORICAL
    from phasorpy.cursors import (
        mask_from_circular_cursor,
        mask_from_elliptic_cursor,
        mask_from_polar_cursor,
        pseudo_color,
    )
    from phasorpy.datasets import fetch
    from phasorpy.io import read_lsm
    from phasorpy.phasor import phasor_from_signal, phasor_threshold
    from phasorpy.plot import PhasorPlot








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Open a hyperspectral dataset used throughout this tutorial:

.. GENERATED FROM PYTHON SOURCE LINES 28-35

.. code-block:: Python


    signal = read_lsm(fetch('paramecium.lsm'))
    mean, real, imag = phasor_from_signal(signal, axis=0)

    # remove coordinates with zero intensity
    mean_thresholded, real, imag = phasor_threshold(mean, real, imag, mean_min=1)








.. GENERATED FROM PYTHON SOURCE LINES 36-40

Circular cursors
----------------

Use circular cursors to mask regions of interest in the phasor space:

.. GENERATED FROM PYTHON SOURCE LINES 40-49

.. code-block:: Python


    cursors_real = [-0.33, 0.54]
    cursors_imag = [-0.72, -0.74]
    radius = [0.2, 0.22]

    circular_mask = mask_from_circular_cursor(
        real, imag, cursors_real, cursors_imag, radius=radius
    )








.. GENERATED FROM PYTHON SOURCE LINES 50-51

Show the circular cursors in a phasor plot:

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: Python


    plot = PhasorPlot(allquadrants=True, title='Circular cursors')
    plot.hist2d(real, imag, cmap='Greys')
    for i in range(len(cursors_real)):
        plot.cursor(
            cursors_real[i],
            cursors_imag[i],
            radius=radius[i],
            color=CATEGORICAL[i],
            linestyle='-',
        )
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_cursors_001.png
   :alt: Circular cursors
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_cursors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 65-66

The cursor masks can be blended to produce a pseudo-colored image:

.. GENERATED FROM PYTHON SOURCE LINES 67-75

.. code-block:: Python


    pseudo_color_image = pseudo_color(*circular_mask)

    fig, ax = plt.subplots()
    ax.set_title('Pseudo-color image from circular cursors')
    ax.imshow(pseudo_color_image)
    plt.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_cursors_002.png
   :alt: Pseudo-color image from circular cursors
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_cursors_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 76-81

Elliptic cursors
----------------

Use elliptic cursors to mask more defined regions of interest in the
phasor space:

.. GENERATED FROM PYTHON SOURCE LINES 81-94

.. code-block:: Python


    radius = [0.1, 0.06]
    radius_minor = [0.3, 0.25]

    elliptic_mask = mask_from_elliptic_cursor(
        real,
        imag,
        cursors_real,
        cursors_imag,
        radius=radius,
        radius_minor=radius_minor,
    )








.. GENERATED FROM PYTHON SOURCE LINES 95-96

Show the elliptic cursors in a phasor plot:

.. GENERATED FROM PYTHON SOURCE LINES 96-110

.. code-block:: Python


    plot = PhasorPlot(allquadrants=True, title='Elliptic cursors')
    plot.hist2d(real, imag, cmap='Greys')
    for i in range(len(cursors_real)):
        plot.cursor(
            cursors_real[i],
            cursors_imag[i],
            radius=radius[i],
            radius_minor=radius_minor[i],
            color=CATEGORICAL[i],
            linestyle='-',
        )
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_cursors_003.png
   :alt: Elliptic cursors
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_cursors_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 111-113

The mean intensity image can be used as a base layer to overlay
the masks from the elliptic cursors:

.. GENERATED FROM PYTHON SOURCE LINES 114-122

.. code-block:: Python


    pseudo_color_image = pseudo_color(*elliptic_mask, intensity=mean)

    fig, ax = plt.subplots()
    ax.set_title('Pseudo-color image from elliptic cursors and intensity')
    ax.imshow(pseudo_color_image)
    plt.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_cursors_004.png
   :alt: Pseudo-color image from elliptic cursors and intensity
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_cursors_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 123-127

Polar cursors
-------------

Create a mask with two ranges of phase and modulation values:

.. GENERATED FROM PYTHON SOURCE LINES 127-137

.. code-block:: Python


    phase_min = [-2.27, -1.22]
    phase_max = [-1.57, -0.70]
    modulation_min = [0.7, 0.8]
    modulation_max = [0.9, 1.0]

    polar_mask = mask_from_polar_cursor(
        real, imag, phase_min, phase_max, modulation_min, modulation_max
    )








.. GENERATED FROM PYTHON SOURCE LINES 138-139

Show the polar cursors in a phasor plot:

.. GENERATED FROM PYTHON SOURCE LINES 139-153

.. code-block:: Python


    plot = PhasorPlot(allquadrants=True, title='Polar cursors')
    plot.hist2d(real, imag, cmap='Greys')
    for i in range(len(phase_min)):
        plot.polar_cursor(
            phase=phase_min[i],
            phase_limit=phase_max[i],
            modulation=modulation_min[i],
            modulation_limit=modulation_max[i],
            color=CATEGORICAL[i + 2],
            linestyle='-',
        )
    plot.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_cursors_005.png
   :alt: Polar cursors
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_cursors_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 154-157

The thresholded mean intensity image can be used as a base layer to
overlay the masks from the polar cursors. Values below the threshold are
transparent (white):

.. GENERATED FROM PYTHON SOURCE LINES 157-169

.. code-block:: Python


    pseudo_color_image = pseudo_color(
        *polar_mask, intensity=mean_thresholded, colors=CATEGORICAL[2:]
    )

    fig, ax = plt.subplots()
    ax.set_title(
        'Pseudo-color image from\npolar cursors and thresholded intensity'
    )
    ax.imshow(pseudo_color_image)
    plt.show()




.. image-sg:: /tutorials/api/images/sphx_glr_phasorpy_cursors_006.png
   :alt: Pseudo-color image from polar cursors and thresholded intensity
   :srcset: /tutorials/api/images/sphx_glr_phasorpy_cursors_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 170-173

sphinx_gallery_thumbnail_number = 1
mypy: allow-untyped-defs, allow-untyped-calls
mypy: disable-error-code="arg-type"


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.591 seconds)


.. _sphx_glr_download_tutorials_api_phasorpy_cursors.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: phasorpy_cursors.ipynb <phasorpy_cursors.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: phasorpy_cursors.py <phasorpy_cursors.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: phasorpy_cursors.zip <phasorpy_cursors.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
