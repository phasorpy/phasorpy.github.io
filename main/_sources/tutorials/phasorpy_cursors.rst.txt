
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/phasorpy_cursors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: xml

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_phasorpy_cursors.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_phasorpy_cursors.py:


Cursors
=======

An introduction to selecting phasor coordinates using cursors.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Import required modules, functions, and classes:

.. GENERATED FROM PYTHON SOURCE LINES 11-25

.. code-block:: Python


    import matplotlib.pyplot as plt
    import tifffile

    from phasorpy.color import CATEGORICAL
    from phasorpy.cursors import (
        mask_from_circular_cursor,
        mask_from_polar_cursor,
        pseudo_color,
    )
    from phasorpy.datasets import fetch
    from phasorpy.phasor import phasor_from_signal, phasor_to_polar
    from phasorpy.plot import PhasorPlot








.. GENERATED FROM PYTHON SOURCE LINES 26-30

Circular cursors
----------------

Use circular cursors in the phasor space to mask regions of interest:

.. GENERATED FROM PYTHON SOURCE LINES 30-39

.. code-block:: Python


    signal = tifffile.imread(fetch('paramecium.lsm'))
    mean, real, imag = phasor_from_signal(signal, axis=0)
    cursors_real = [-0.33, 0.55]
    cursors_imag = [-0.72, -0.72]
    circular_mask = mask_from_circular_cursor(
        real, imag, cursors_real, cursors_imag, radius=0.2
    )








.. GENERATED FROM PYTHON SOURCE LINES 40-41

Show the circular cursors in the phasor plot:

.. GENERATED FROM PYTHON SOURCE LINES 41-55

.. code-block:: Python


    threshold = mean > 1

    plot = PhasorPlot(allquadrants=True, title='Two circular cursors')
    plot.hist2d(real[threshold], imag[threshold])
    for i in range(len(cursors_real)):
        plot.cursor(
            cursors_real[i],
            cursors_imag[i],
            radius=0.2,
            color=CATEGORICAL[i],
            linestyle='-',
        )




.. image-sg:: /tutorials/images/sphx_glr_phasorpy_cursors_001.png
   :alt: Two circular cursors
   :srcset: /tutorials/images/sphx_glr_phasorpy_cursors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 56-60

Polar cursor
------------

Create a mask with phase and modulation values:

.. GENERATED FROM PYTHON SOURCE LINES 60-67

.. code-block:: Python


    phase, mod = phasor_to_polar(real, imag)

    phase_range = [[-2.27, -1.57], [-1.22, -0.70]]
    modulation_range = [[0.7, 0.9], [0.8, 1.0]]
    polar_mask = mask_from_polar_cursor(phase, mod, phase_range, modulation_range)








.. GENERATED FROM PYTHON SOURCE LINES 68-69

Show cursors in the phasor plot:

.. GENERATED FROM PYTHON SOURCE LINES 69-82

.. code-block:: Python


    plot = PhasorPlot(allquadrants=True, title='Two polar cursors')
    plot.hist2d(real[threshold], imag[threshold], cmap='Blues')
    for i in range(len(phase_range[0])):
        plot.polar_cursor(
            phase=phase_range[i][0],
            phase_limit=phase_range[i][1],
            modulation=modulation_range[i][0],
            modulation_limit=modulation_range[i][1],
            color=CATEGORICAL[i + 2],
            linestyle='-',
        )




.. image-sg:: /tutorials/images/sphx_glr_phasorpy_cursors_002.png
   :alt: Two polar cursors
   :srcset: /tutorials/images/sphx_glr_phasorpy_cursors_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 83-88

Pseudo-color
------------

Average images can be pseudo-colored (segmented) using cursor's masks.
Segmented image with circular cursors:

.. GENERATED FROM PYTHON SOURCE LINES 88-96

.. code-block:: Python


    segmented_image = pseudo_color(mean, circular_mask)

    fig, ax = plt.subplots()
    ax.set_title('Segmented image with circular cursors')
    ax.imshow(segmented_image)
    plt.show()




.. image-sg:: /tutorials/images/sphx_glr_phasorpy_cursors_003.png
   :alt: Segmented image with circular cursors
   :srcset: /tutorials/images/sphx_glr_phasorpy_cursors_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 97-98

Segmented image with polar cursors:

.. GENERATED FROM PYTHON SOURCE LINES 98-106

.. code-block:: Python


    segmented_image = pseudo_color(mean, polar_mask, colors=CATEGORICAL[2:])

    fig, ax = plt.subplots()
    ax.set_title('Segmented image with polar cursors')
    ax.imshow(segmented_image)
    plt.show()




.. image-sg:: /tutorials/images/sphx_glr_phasorpy_cursors_004.png
   :alt: Segmented image with polar cursors
   :srcset: /tutorials/images/sphx_glr_phasorpy_cursors_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 107-108

sphinx_gallery_thumbnail_number = 1


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.063 seconds)


.. _sphx_glr_download_tutorials_phasorpy_cursors.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: phasorpy_cursors.ipynb <phasorpy_cursors.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: phasorpy_cursors.py <phasorpy_cursors.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
