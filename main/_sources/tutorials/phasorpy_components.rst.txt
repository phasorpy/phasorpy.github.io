
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/phasorpy_components.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: xml

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_phasorpy_components.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_phasorpy_components.py:


Component analysis
==================

An introduction to component analysis in the phasor space.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Import required modules, functions, and classes:

.. GENERATED FROM PYTHON SOURCE LINES 11-19

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy

    from phasorpy.components import two_fractions_from_phasor
    from phasorpy.phasor import phasor_from_lifetime
    from phasorpy.plot import PhasorPlot








.. GENERATED FROM PYTHON SOURCE LINES 20-27

Fractions of combination of two components
------------------------------------------

The phasor coordinate of a combination of two lifetime components lie on
the line between the two components. For example, a combination with 25%
contribution of a component with lifetime 8.0 ns and 75% contribution of
a second component with lifetime 1.0 ns at 80 MHz:

.. GENERATED FROM PYTHON SOURCE LINES 27-42

.. code-block:: Python


    frequency = 80.0
    components_lifetimes = [8.0, 1.0]
    component_fractions = [0.25, 0.75]
    real, imag = phasor_from_lifetime(
        frequency, components_lifetimes, component_fractions
    )
    components_real, components_imag = phasor_from_lifetime(
        frequency, components_lifetimes
    )
    plot = PhasorPlot(frequency=frequency, title='Combination of two components')
    plot.plot(components_real, components_imag, fmt='o-')
    plot.plot(real, imag)
    plot.show()




.. image-sg:: /tutorials/images/sphx_glr_phasorpy_components_001.png
   :alt: Combination of two components
   :srcset: /tutorials/images/sphx_glr_phasorpy_components_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 43-46

If the location of both components is known, their contributions
to the phasor point that lies on the line between the components
can be calculated:

.. GENERATED FROM PYTHON SOURCE LINES 46-54

.. code-block:: Python


    (
        fraction_of_first_component,
        fraction_of_second_component,
    ) = two_fractions_from_phasor(real, imag, components_real, components_imag)
    print(f'Fraction of first component:  {fraction_of_first_component:.3f}')
    print(f'Fraction of second component: {fraction_of_second_component:.3f}')





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Fraction of first component:  0.250
    Fraction of second component: 0.750




.. GENERATED FROM PYTHON SOURCE LINES 55-60

Contribution of two known components in multiple phasors
--------------------------------------------------------

Phasors can have different contributions of two components with known
phasor coordinates:

.. GENERATED FROM PYTHON SOURCE LINES 60-72

.. code-block:: Python


    real, imag = numpy.random.multivariate_normal(
        (0.6, 0.35), [[8e-3, 1e-3], [1e-3, 1e-3]], (100, 100)
    ).T
    plot = PhasorPlot(
        frequency=frequency,
        title='Phasor with contribution of two known components',
    )
    plot.hist2d(real, imag, cmap='plasma')
    plot.plot(*phasor_from_lifetime(frequency, components_lifetimes), fmt='o-')
    plot.show()




.. image-sg:: /tutorials/images/sphx_glr_phasorpy_components_002.png
   :alt: Phasor with contribution of two known components
   :srcset: /tutorials/images/sphx_glr_phasorpy_components_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 73-76

If the phasor coordinates of two components contributing to multiple
phasors are known, their fractional contributions to each phasor coordinate
can be calculated and plotted as histograms:

.. GENERATED FROM PYTHON SOURCE LINES 76-103

.. code-block:: Python


    (
        fraction_from_first_component,
        fraction_from_second_component,
    ) = two_fractions_from_phasor(real, imag, components_real, components_imag)
    fig, ax = plt.subplots()
    ax.hist(
        fraction_from_first_component.flatten(),
        range=(0, 1),
        bins=100,
        alpha=0.75,
        label='First',
    )
    ax.hist(
        fraction_from_second_component.flatten(),
        range=(0, 1),
        bins=100,
        alpha=0.75,
        label='Second',
    )
    ax.set_title('Histograms of fractions of first and second component')
    ax.set_xlabel('Fraction')
    ax.set_ylabel('Counts')
    ax.legend()
    plt.tight_layout()
    plt.show()




.. image-sg:: /tutorials/images/sphx_glr_phasorpy_components_003.png
   :alt: Histograms of fractions of first and second component
   :srcset: /tutorials/images/sphx_glr_phasorpy_components_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 104-105

sphinx_gallery_thumbnail_number = 2


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.361 seconds)


.. _sphx_glr_download_tutorials_phasorpy_components.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: phasorpy_components.ipynb <phasorpy_components.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: phasorpy_components.py <phasorpy_components.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
